Sub test_Click()

    '【変数宣言】
    '確認メッセージ関連
    Dim cfmAns As Integer
    '入力値関連
    Dim titleColor As String
    Dim subtitleColor As String
    Dim targetFilePath As String
    Dim targetSheetName As String
    Dim startRow As Long
    Dim cycleTime As Integer
    Dim endRow As Long  '最終行を自動取得
    Const STARTCOL As Integer = 3 'データ開始列を定数設定
    Const ENDCOL As Integer = 9 'データ終了列を定数設定
    Const OUTPUTSTARTCOL As Integer = 3 '出力データ開始列を定数設定
    Const OUTPUTENDCOL As Integer = 9 '出力データ終了列を定数設定
    'ワークシート/パス関連
    Dim thisFolderPath As String
    Dim wbThis As Workbook
    Dim wsThis As Worksheet
    Dim wsTemplate As Worksheet
    Dim wbTarget As Workbook
    Dim wsTarget As Worksheet
    Dim createFolderPath As String
    Dim wbCreate As Workbook
    Dim wsCreate As Worksheet
    Dim createFileName As String
    '共通部品関連
    Dim i As Long
    Dim j As Integer
    Dim editFlg As Boolean
    Dim newFlg As Boolean
    '読取りデータ関連
    Dim titleName As String
    Dim subtitleName As String
    Dim sceNumStr As String   'シナリオNo.
    '出力データ関連
    Dim outputStartRow As Integer
    
    
    '【エラーチェック】
    Set wbThis = ThisWorkbook
    Set wsThis = wbThis.Worksheets("Sheet1")
    With wsThis
        If .Cells(2, 3).Interior.ColorIndex = xlNone Then
            MsgBox "タイトルの塗りつぶしが指定されていません。", vbOKOnly + vbCritical, "エラー通知"
            Set wsThis = Nothing
            End
        End If
        If .Cells(3, 3).Interior.ColorIndex = xlNone Then
            MsgBox "サブタイトルの塗りつぶしが指定されていません。", vbOKOnly + vbCritical, "エラー通知"
            Set wsThis = Nothing
            End
        End If
        If .Cells(4, 3).Value = "" Then
            MsgBox "対象ファイルパスが指定されていません。", vbOKOnly + vbCritical, "エラー通知"
            Set wsThis = Nothing
            End
        End If
        If .Cells(5, 3).Value = "" Then
            MsgBox "対象シート名が指定されていません。", vbOKOnly + vbCritical, "エラー通知"
            Set wsThis = Nothing
            End
        End If
        If .Cells(6, 3).Value = "" Then
            MsgBox "データ開始行が指定されていません。", vbOKOnly + vbCritical, "エラー通知"
            Set wsThis = Nothing
            End
        ElseIf Not IsNumeric(.Cells(6, 3).Value) Then
            MsgBox "データ開始行に数字以外が入力されています。", vbOKOnly + vbCritical, "エラー通知"
            Set wsThis = Nothing
            End
        End If
        If .Cells(7, 3).Value = "" Then
            MsgBox "サイクル行が指定されていません。", vbOKOnly + vbCritical, "エラー通知"
            Set wsThis = Nothing
            End
        ElseIf Not IsNumeric(.Cells(7, 3).Value) Then
            MsgBox "サイクル行に数字以外が入力されています。", vbOKOnly + vbCritical, "エラー通知"
            Set wsThis = Nothing
            End
        End If
    End With
    
    
    '【処理起動確認】
    '処理を行うか確認するメッセージボックスを表示する。
    cfmAns = MsgBox("ファイル作成を行いますか？", vbOKCancel + vbQuestion, "確認")
    'キャンセルが押された場合、処理を終了する。
    If cfmAns = vbCancel Then
        MsgBox "処理を中止しました。", vbOKOnly + vbInformation, "処理中止通知"
        Set wsThis = Nothing
        Set wbThis = Nothing
        End
    End If
    
    '入力値を変数にセット
    With wsThis
        titleColor = .Cells(2, 3).Interior.ColorIndex
        subtitleColor = .Cells(3, 3).Interior.ColorIndex
        targetFilePath = .Cells(4, 3).Value
        targetSheetName = .Cells(5, 3).Value
        startRow = .Cells(6, 3).Value
        cycleTime = .Cells(7, 3).Value
    End With
    '読取り対象ファイル、シート、データ最終行を変数にセット
    Set wbTarget = Workbooks.Open(targetFilePath)
    Set wsTarget = wbTarget.Worksheets(targetSheetName)
    endRow = wsTarget.Cells(Rows.Count, 3).End(xlUp).Row
    'このマクロファイルのフォルダパスを変数にセット
    thisFolderPath = ThisWorkbook.Path
    'テンプレートシートを設定
    Set wsTemplate = wbThis.Worksheets("テンプレート")
    outputStartRow = wsTemplate.Cells(Rows.Count, STARTCOL).End(xlUp).Row + 1   'STARTCOLはインプットデータの絡む番号だが、アウトプットデータの開始列と±0
    
    '変数初期化
    editFlg = False
    newFlg = False
    '読取りデータ行分ループ処理
    With wsTarget
        For i = startRow To endRow
        
            'タイトル行の場合、新規フォルダーを作成
            If .Cells(i, STARTCOL + 2).Interior.ColorIndex = titleColor Then
                titleName = .Cells(i, STARTCOL + 2).Value
                sceNumStr = .Cells(i, 1).Value  'シナリオNo.読取り
                createFolderPath = thisFolderPath & "\シナリオ" & sceNumStr
                MkDir (createFolderPath)
            'サブタイトル行の場合、新規ファイルを作成
            ElseIf .Cells(i, STARTCOL + 2).Interior.ColorIndex = subtitleColor Then
                '編集中ファイルがあれば、保存し、閉じる
                If editFlg = True Then
                    wbCreate.Worksheets(1).Select
                    wbCreate.Close SaveChanges:=True
                    Set wsCreate = Nothing
                    Set wbCreate = Nothing
                End If
                '新規ファイル作成
                subtitleName = .Cells(i, STARTCOL + 2).Value
                createFileName = .Cells(i + 1, STARTCOL + 1).Value & "_" & titleName & "_" & subtitleName & "_" & cycleTime & ".xlsx"
                Set wbCreate = Workbooks.Add
                wbCreate.SaveAs createFolderPath & "\" & createFileName
                '編集中フラグ、新規作成フラグをONにする
                editFlg = True
                newFlg = True
            'データ行の場合
            ElseIf .Cells(i, STARTCOL + 2).Value <> "" Then
                '新規作成したばかりの場合、Sheet1シートに、テンプレートシートの内容をコピーペーストする
                If newFlg = True Then
                    wsTemplate.Cells.Copy wbCreate.Worksheets(1).Range("A1")
                '編集形跡がある場合、新規シートを作成・コピーペーストする
                Else
                    wsTemplate.Copy after:=wbCreate.Worksheets(Worksheets.Count)
                End If
                'シート名を変更する
                Set wsCreate = wbCreate.Worksheets(Worksheets.Count)
                wsCreate.Name = .Cells(i, STARTCOL + 1).Value
                '新規作成フラグをOFFにする
                newFlg = False
                'データを転記する
                wsCreate.Cells(outputStartRow, OUTPUTSTARTCOL + 2).Value = titleName
                wsCreate.Cells(outputStartRow + 1, OUTPUTSTARTCOL + 2).Value = subtitleName
                For j = STARTCOL To ENDCOL
                    wsCreate.Cells(outputStartRow + 2, j + (STARTCOL - OUTPUTSTARTCOL)).NumberFormat = "@"
                    wsCreate.Cells(outputStartRow + 2, j + (STARTCOL - OUTPUTSTARTCOL)).Value = .Cells(i, j).Value
                Next j
                wsCreate.Cells(1, 1).Select
                ActiveWindow.ScrollColumn = 1
                ActiveWindow.ScrollRow = 1
            'その他、空白等の場合
            Else
                '何もしない
            End If
        Next i
        '最終データのループ処理終了時、Excel編集中ファイルが開いたままなので、保存し、閉じる、
        If editFlg = True Then
            wbCreate.Close SaveChanges:=True
            Set wsCreate = Nothing
            Set wbCreate = Nothing
        End If
    End With


    '【完了処理】
    wbTarget.Close
    Set wsTarget = Nothing
    Set wbTarget = Nothing
    wsThis.Select
    Set wsThis = Nothing
    Set wbThis = Nothing
    MsgBox "処理が完了しました。", vbOKOnly + vbInformation, "完了通知"

End Sub
